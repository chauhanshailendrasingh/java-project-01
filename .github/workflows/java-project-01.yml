name: Java CI with Maven

on:
  push:
    branches: [ "main" ]

jobs:
  compile:
    runs-on: self-hosted  
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: compile with Maven
      run: mvn compile

  security-scan:
    runs-on: self-hosted
    needs: compile

    steps:
    - name: git checkout
      uses: actions/checkout@v4
    - name: Scan source code for vulnerabilities
      uses: aquasecurity/trivy-action@master
      with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '1'
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          
    - name: Run Gitleaks
      uses: gitleaks/gitleaks-action@v2
      with:
        args: detect --source . --report-path gitleaks-report.json --exit-code 1


  sonarqube:
    runs-on: self-hosted
    needs: security-scan
    
    steps:
      - uses: actions/checkout@v4
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting.
          fetch-depth: 0
      - name: Install unzip
        run: |
          sudo apt-get update -y
          sudo apt-get install -y unzip

      # Triggering SonarQube analysis as results of it are required by Quality Gate check.
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

      # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }} #OPTIONAL

      
  test:
    runs-on: self-hosted
    needs: sonarqube

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: test with Maven
      run: mvn -B test
      
  build:
    runs-on: self-hosted
    needs: test

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Package with Maven
      run: mvn -B clean package -DskipTests
   
    - name: upload JAR
      uses: actions/upload-artifact@v4
      with:
        name: app-jar
        path: target/*.jar

  docker:
    runs-on: self-hosted
    needs: build

    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/checkout@v4
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: .
          
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            shailchauhan/app:latest
            shailchauhan/app:${{ github.sha }}
          file: ./Dockerfile


          

        
   
  
      
